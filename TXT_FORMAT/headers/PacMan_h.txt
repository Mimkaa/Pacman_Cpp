#pragma once
#include <SFML/Graphics.hpp>
#include <iostream>

class PacMan
{
private:
	sf::Vector2<float> position;
	int UpperJawInd;
	int LowerJawInd;
	unsigned int nPoints;
	unsigned int radius;
	std::vector<sf::Vector2<float>> original;
	std::vector<sf::Vector2<float>> transformed;
	std::vector<sf::Vector2<float>> drawable;
	float angle;
	int nom_dir;
	int last_update;
	int current_time;


	sf::Color color;

public:
	// Constructor, Destructor
	PacMan(sf::Vector2<float> pos, int vec_UpperJaw, 
		int vec_LowerJaw, unsigned int numPoints, unsigned int rad, sf::Color col, float ang);
	virtual ~PacMan();

	// Getters and setters
	void set_position(sf::Vector2<float> vec);

	//Functions
	void update(float dt);
	void draw(sf::RenderWindow& i_window);
	void createPoints();
	void animate();
	void get_keys();
	bool FloatComp(float a, float b, float epsilon);
	void move(float dt);
	void wrap_around();



};

